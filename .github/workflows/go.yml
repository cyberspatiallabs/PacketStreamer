# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
    tags:
      - "v*"

  pull_request:
    branches: [ "main" ]
permissions:
  contents: write
jobs:
  
  release:
    name: Create Release
    runs-on: 'ubuntu-latest'    
    strategy:
      matrix:
        # List of GOOS and GOARCH pairs from `go tool dist list`
        # https://www.digitalocean.com/community/tutorials/how-to-build-go-executables-for-multiple-platforms-on-ubuntu-16-04
        goosarch:          
          - 'darwin/amd64'
          - 'linux/386'
          - 'linux/amd64'
          - 'linux/arm64'
          - 'windows/amd64'
          - 'windows/386'          
          # etc
    steps:
      - name: Install system dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt-get update
          sudo apt-get -y install libpcap-dev
          while read -r cmd
          do
            eval sudo $cmd
          done
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0        
      - uses: actions/setup-go@v2
        with:
          go-version: '1.17.0'
      - name: Get OS and arch info (non Mac)
        run: |
          GOOSARCH=${{matrix.goosarch}}
          GOOS=${GOOSARCH%/*}
          GOARCH=${GOOSARCH#*/}
          BINARY_NAME=packetstreamer-$GOOS-$GOARCH
          echo "BINARY_NAME=$BINARY_NAME" >> $GITHUB_ENV
          echo "GOOS=$GOOS" >> $GITHUB_ENV
          echo "GOARCH=$GOARCH" >> $GITHUB_ENV
      - name: Add Mac Cross Compiling
        if: runner.os == 'Darwin'
        run: |          
          echo "CGO_ENABLED=1" >> $GITHUB_ENV
      - name: Build
        run: |
          go build -o "$BINARY_NAME" -v .
      - name: Release Notes
        run:
          git log $(git describe HEAD~ --tags --abbrev=0)..HEAD --pretty='format:* %h %s%n  * %an <%ae>' --no-merges >> ".github/RELEASE-TEMPLATE.md"
      - name: Release with Notes
        uses: softprops/action-gh-release@v1
        with:
          body_path: ".github/RELEASE-TEMPLATE.md"
          draft: true
          files: ${{env.BINARY_NAME}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}